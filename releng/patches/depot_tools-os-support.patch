diff --git a/cipd b/cipd
index 91fbe165..9bd19329 100755
--- a/cipd
+++ b/cipd
@@ -31,6 +31,9 @@ case "${UNAME}" in
   darwin)
     OS=mac
     ;;
+  freebsd)
+    exit 0
+    ;;
   *)
     >&2 echo "CIPD not supported on ${UNAME}"
     exit 1
diff --git a/download_from_google_storage.py b/download_from_google_storage.py
index 27a67c8d..0230a720 100755
--- a/download_from_google_storage.py
+++ b/download_from_google_storage.py
@@ -43,6 +43,8 @@ PLATFORM_MAPPING = {
     'aix6': 'aix',
     'aix7': 'aix',
 }
+if sys.platform.startswith('freebsd'):
+  PLATFORM_MAPPING[sys.platform] = 'freebsd'
 
 
 class FileNotFoundError(IOError):
diff --git a/gclient.py b/gclient.py
index 446be28d..08a33f07 100755
--- a/gclient.py
+++ b/gclient.py
@@ -1313,6 +1313,8 @@ _PLATFORM_MAPPING = {
   'win32': 'win',
   'aix6': 'aix',
 }
+if sys.platform.startswith('freebsd'):
+  _PLATFORM_MAPPING[sys.platform] = 'freebsd'
 
 
 def merge_vars(result, new_vars):
diff --git a/gclient_utils.py b/gclient_utils.py
index ae958cde..7c2a1adf 100644
--- a/gclient_utils.py
+++ b/gclient_utils.py
@@ -600,7 +600,7 @@ def CheckCallAndFilter(args, print_stdout=False, filter_fn=None,
     # If our stdout is a terminal, then pass in a psuedo-tty pipe to our
     # subprocess when filtering its output. This makes the subproc believe
     # it was launched from a terminal, which will preserve ANSI color codes.
-    os_type = GetMacWinAixOrLinux()
+    os_type = GetOsType()
     if sys.stdout.isatty() and os_type != 'win' and os_type != 'aix':
       pipe_reader, pipe_writer = os.openpty()
     else:
@@ -746,7 +746,7 @@ def FindFileUpwards(filename, path=None):
     path = new_path
 
 
-def GetMacWinAixOrLinux():
+def GetOsType():
   """Returns 'mac', 'win', or 'linux', matching the current platform."""
   if sys.platform.startswith(('cygwin', 'win')):
     return 'win'
@@ -754,6 +754,8 @@ def GetMacWinAixOrLinux():
     return 'linux'
   elif sys.platform == 'darwin':
     return 'mac'
+  elif sys.platform.startswith('freebsd'):
+    return 'freebsd'
   elif sys.platform.startswith('aix'):
     return 'aix'
   raise Error('Unknown platform: ' + sys.platform)
diff --git a/metrics.py b/metrics.py
index 5e3a9356..91aa04a0 100644
--- a/metrics.py
+++ b/metrics.py
@@ -241,7 +241,7 @@ class MetricsCollector(object):
     # Add metrics regarding environment information.
     self.add('timestamp', int(time.time()))
     self.add('python_version', metrics_utils.get_python_version())
-    self.add('host_os', gclient_utils.GetMacWinAixOrLinux())
+    self.add('host_os', gclient_utils.GetOsType())
     self.add('host_arch', detect_host_arch.HostArch())
 
     depot_tools_age = metrics_utils.get_repo_timestamp(DEPOT_TOOLS)
diff --git a/tests/metrics_test.py b/tests/metrics_test.py
index 19948b47..7825c1c5 100644
--- a/tests/metrics_test.py
+++ b/tests/metrics_test.py
@@ -63,7 +63,7 @@ class MetricsCollectorTest(unittest.TestCase):
     mock.patch('metrics.metrics_utils.get_python_version',
                lambda: '2.7.13').start()
     mock.patch(
-        'metrics.gclient_utils.GetMacWinAixOrLinux', lambda: 'linux').start()
+        'metrics.gclient_utils.GetOsType', lambda: 'linux').start()
     mock.patch('metrics.detect_host_arch.HostArch',
                lambda: 'x86').start()
     mock.patch('metrics_utils.get_repo_timestamp',
diff --git a/vpython b/vpython
index 997658ac..52147260 100755
--- a/vpython
+++ b/vpython
@@ -32,7 +32,7 @@ then
         ;;
     esac
   done
-  exec "python" "${NEWARGS[@]}"
+  exec "python2.7" "${NEWARGS[@]}"
 fi
 
 
